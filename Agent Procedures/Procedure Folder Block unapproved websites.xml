<?xml version="1.0" encoding="utf-8"?>
<ScriptExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Folder name="Block unapproved websites" treePres="3">
    <Procedure name="Block hosts" treePres="3" id="2051905444" folderId="477320365643743" treeFullPath="myProcedures - admin.RFT Compliance Manager.Block unapproved websites">
      <Body description="This agent procedure uploads and executes on agent's machine PowerShell script, which check if hosts file contains any records from blacklist.txt file.&#xA;&#xA;If some domain names are not present in agent's hosts file, script will add records to point them to 127.0.0.1">
        <Statement description="This agent procedure uploads and executes on agent's machine PowerShell script, which check if hosts file contains any records from blacklist.txt file.&#xD;&#xA;If some domain names are not present in agent's hosts file, script will add records to point them to 127.0.0.1&#xD;&#xA;Version: 0.1&#xD;&#xA;Author: Aliaksandr Serzhankou (a.serzhankou@kaseya.com)" name="GetVariable" continueOnFail="false" osType="Windows">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="ksecure" />
        </Statement>
        <If description="Checking if it's Windows operating system">
          <Condition name="CheckVariable">
            <Parameter xsi:type="StringParameter" name="VariableName" value="#ksecure#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement description="Upload PowerShell script and text file to the secure folder on agent's machine" name="WriteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#ksecure#\Block-UnblockHosts.ps1" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\RFTCM\Block-UnblockHosts.ps1" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <Statement name="WriteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#ksecure#\blacklist.txt" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\RFTCM\blacklist.txt" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <If description="Check if delivery of PowerShell script was successful">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#ksecure#\Block-UnblockHosts.ps1" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <If description="Check if delivery of text file was successful">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#ksecure#\blacklist.txt" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement description="Set execution policy to Unrestricted" name="ExecuteShellCommand" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Command" value="Powershell Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope LocalMachine -force" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="Execute PowerShell script with -Add switch to add domains from text file to hosts file" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="powershell #ksecure#\Block-UnblockHosts.ps1 -Blacklist &quot;#ksecure#\blacklist.txt&quot; -Add" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="False" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
                    </Statement>
                    <Statement description="Output result to Agent Procedure Log" name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="#global:cmdresults#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement description="Handle error" name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="Text file block_host.txt is missing in VSA secure directory" />
                    </Statement>
                  </Else>
                </If>
              </Then>
              <Else>
                <Statement description="Handle error" name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="Powershell script wasn't found in destination folder" />
                </Statement>
              </Else>
            </If>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Only Windows operating systems are supported." />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="Check hosts" treePres="3" id="1225871930" folderId="477320365643743" treeFullPath="myProcedures - admin.RFT Compliance Manager.Block unapproved websites">
      <Body description="This agent procedure uploads and executes on agent's machine PowerShell script, which check if hosts file contains any records from blacklist.txt file.&#xA;&#xA;If so, domains name which are not in hosts file will be send to agent procedure log.">
        <Statement description="This agent procedure uploads and executes on agent's machine PowerShell script, which check if hosts file contains any records from blacklist.txt file.&#xD;&#xA;If so, domain names which are not in hosts file will be send to agent procedure log&#xD;&#xA;Version: 0.1&#xD;&#xA;Author: Aliaksandr Serzhankou (a.serzhankou@kaseya.com)" name="GetVariable" continueOnFail="false" osType="Windows">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="ksecure" />
        </Statement>
        <If description="Checking if it's Windows operating system">
          <Condition name="CheckVariable">
            <Parameter xsi:type="StringParameter" name="VariableName" value="#ksecure#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement description="Upload PowerShell script and text file to the secure folder on agent's machine" name="WriteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#ksecure#\Block-UnblockHosts.ps1" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\RFTCM\Block-UnblockHosts.ps1" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <Statement name="WriteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#ksecure#\blacklist.txt" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\RFTCM\blacklist.txt" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <If description="Check if delivery of PowerShell script was successful">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#ksecure#\Block-UnblockHosts.ps1" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <If description="Check if delivery of text file was successful">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#ksecure#\blacklist.txt" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement description="Set execution policy to Unrestricted" name="ExecuteShellCommand" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Command" value="Powershell Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope LocalMachine -force" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="Execute PowerShell script with no switches to check if hosts file contains any domains from text file" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="powershell #ksecure#\Block-UnblockHosts.ps1 -BlackList &quot;#ksecure#\blacklist.txt&quot;" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="False" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
                    </Statement>
                    <Statement description="Output result to Agent Procedure Log" name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="#global:cmdresults#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement description="Handle error" name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="Text file blacklist.txt is missing in VSA secure directory" />
                    </Statement>
                  </Else>
                </If>
              </Then>
              <Else>
                <Statement description="Handle error" name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="Powershell script wasn't found in destination folder" />
                </Statement>
              </Else>
            </If>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Only Windows operating systems are supported." />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="Remove hosts" treePres="3" id="1369538159" folderId="477320365643743" treeFullPath="myProcedures - admin.RFT Compliance Manager.Block unapproved websites">
      <Body description="This agent procedure uploads and executes on agent's machine PowerShell script, which check if hosts file contains any records from blacklist.txt file.&#xA;&#xA;If so, domains name which are equal to domain names from blacklist.txt file will be removed from hosts file">
        <Statement description="This agent procedure uploads and executes on agent's machine PowerShell script, which check if hosts file contains any records from blacklist.txt file.&#xD;&#xA;If so, domain names which are equal to domain names from blacklist.txt file will be removed from hosts file&#xD;&#xA;Version: 0.1&#xD;&#xA;Author: Aliaksandr Serzhankou (a.serzhankou@kaseya.com)" name="GetVariable" continueOnFail="false" osType="Windows">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="ksecure" />
        </Statement>
        <If description="Checking if it's Windows operating system">
          <Condition name="CheckVariable">
            <Parameter xsi:type="StringParameter" name="VariableName" value="#ksecure#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement description="Upload PowerShell script and text file to the secure folder on agent's machine" name="WriteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#ksecure#\Block-UnblockHosts.ps1" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\RFTCM\Block-UnblockHosts.ps1" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <Statement name="WriteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#ksecure#\blacklist.txt" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\RFTCM\blacklist.txt" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <If description="Check if delivery of PowerShell script was successful">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#ksecure#\Block-UnblockHosts.ps1" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <If description="Check if delivery of text file was successful">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#ksecure#\blacklist.txt" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement description="Set execution policy to Unrestricted" name="ExecuteShellCommand" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Command" value="Powershell Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope LocalMachine -force" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="Execute PowerShell script with -Remove switch to add domains from text file to hosts file" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="powershell #ksecure#\Block-UnblockHosts.ps1 -Blacklist &quot;#ksecure#\blacklist.txt&quot; -Remove" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="False" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
                    </Statement>
                    <Statement description="Output result to Agent Procedure Log" name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="#global:cmdresults#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement description="Handle error" name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="Text file block_host.txt is missing in VSA secure directory" />
                    </Statement>
                  </Else>
                </If>
              </Then>
              <Else>
                <Statement description="Handle error" name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="Powershell script wasn't found in destination folder" />
                </Statement>
              </Else>
            </If>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Only Windows operating systems are supported." />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
  </Folder>
</ScriptExport>