<?xml version="1.0" encoding="utf-8"?>
<ScriptExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Procedure name="Monitor Service User" treePres="3" id="499086203" folderId="837937133404396" treeFullPath="myProcedures - kadmin">
    <Body description="The procedure calls powershell script that checks if certain services are running from correct accounts. In case of deficiency an alert is sent.">
      <Statement description="The procedure calls powershell script that checks if certain services are running from correct accounts. In case of deficiency an alert is sent&#xD;&#xA;Version 0.1&#xD;&#xA;Author: Vladislav Semko (vladislav.semko@kaseya.com)" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempDirectory" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="path" />
      </Statement>
      <Statement description="Set Output File name" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="srvcheck.txt" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="filename" />
      </Statement>
      <Statement description="Set Powershell script name" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="Test-Service.ps1" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="psscript" />
      </Statement>
      <If description="">
        <Condition name="CheckVariable">
          <Parameter xsi:type="StringParameter" name="VariableName" value="#path#" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
          <Parameter xsi:type="StringParameter" name="Value" value="" />
        </Condition>
        <Then>
          <Statement description="Set Unrestricted execution policy" name="ExecuteShellCommand" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Command" value="Powershell Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope LocalMachine -force" />
            <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
            <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
          </Statement>
          <Statement description="Upload the Powershell script to the agent machine" name="WriteFile" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Path" value="#path#\#psscript#" />
            <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\Brookfield\#psscript#" />
            <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
          </Statement>
          <Statement description="Set services list to check as a comma-separated list of values in double quotes." name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="&quot;OcteumDataBrokerService&quot;, &quot;OcteumLnlConnectorCliWrapperService&quot;" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="servicelist" />
          </Statement>
          <Statement description="Set allowed users to run the services as a comma-separated list of values in double quotes." name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="&quot;OTSA-OLP-SafeTrust&quot;, &quot;svc-1mw-safetrust&quot;, &quot;OTSA-200lib-SafeTrust&quot;, &quot;OTSA-225lib-SafeTrust&quot;, &quot;OTSA-300ves-SafeTrust&quot;, &quot;OTSA-424-SafeTrust&quot;, &quot;otsa-5mw-safetrust&quot;" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="userlist" />
          </Statement>
          <Statement description="Execute the Powershell script" name="ExecuteShellCommand" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Command" value="powershell #path#\#psscript# -AgentName &quot;#vAgentConfiguration.agentGuid#&quot; -Path &quot;#path#&quot; -FileName &quot;#filename#&quot; -Services #servicelist# -ServiceUsers #userlist#" />
            <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
            <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
          </Statement>
          <Statement description="Get results from file" name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="#path#\#filename#" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="outcome" />
          </Statement>
          <If description="">
            <Condition name="CheckVariable">
              <Parameter xsi:type="StringParameter" name="VariableName" value="#outcome#" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
              <Parameter xsi:type="StringParameter" name="Value" value="Service" />
            </Condition>
            <Then>
              <Statement description="Deficiency detected. Generate alert" name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="Service user deficiency detected on machine &lt;&lt;id&gt;&gt;" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="alertSubject" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="Deficient services detected by &lt;&lt;apn&gt;&gt; on machine &lt;&lt;id&gt;&gt; at &lt;&lt;ata&gt;&gt;. Detailed information: #outcome#" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="alertBody" />
              </Statement>
              <Statement name="SendAlert" continueOnFail="false" />
            </Then>
          </If>
          <Statement description="Cleanup" name="DeleteFile" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Path" value="#path#\#psscript#" />
          </Statement>
          <Statement name="DeleteFile" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Path" value="#path#\#filename#" />
          </Statement>
        </Then>
        <Else>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="Only Windows operating systems are supported." />
          </Statement>
        </Else>
      </If>
    </Body>
  </Procedure>
</ScriptExport>