<?xml version="1.0" encoding="utf-8"?>
<ScriptExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Folder name="Automate remote access" treePres="3">
    <Procedure name="Automate remote access" treePres="3" id="1107772023" folderId="245246059375464" treeFullPath="myProcedures - admin.Automate remote access">
      <Body description="">
        <Statement description="This procedure will execute Powershell script with has been developed for automated creation of users which are supposed to have limited access to some sections of VSA.&#xD;&#xA;Version: 0.1&#xD;&#xA;Author: Aliaksandr Serzhankou (a.serzhankou@kaseya.com)" name="GetVariable" continueOnFail="false" osType="Windows">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempDirectory" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="ktemp" />
        </Statement>
        <If description="Check if operating system is Window">
          <Condition name="CheckVariable">
            <Parameter xsi:type="StringParameter" name="VariableName" value="#ktemp#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement description="Set execution policy of Powershell to accept execution of downloaded script" name="ExecuteShellCommand" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Command" value="Powershell Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope LocalMachine -force" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Create dedicated folder for Powershell script and log file" name="Execute Powershell" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item #ktemp#\autoremoteaccess -ItemType Directory" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement description="Upload Powershell script to the agent machine" name="WriteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#ktemp#\autoremoteaccess\Automateremoteaccess.ps1" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\AutoRemoteAccess\Automate remote access.ps1" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <Statement description="Get input from user: URL, Username and Password for VSA API" name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Please supply URL or IP address of VSA server (without HTTP or HTTPS). Example: 192.168.100.1" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="Url" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Username of master account." />
              <Parameter xsi:type="StringParameter" name="VariableName" value="Username" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Password for master's account." />
              <Parameter xsi:type="StringParameter" name="VariableName" value="Password" />
            </Statement>
            <If description="Check if Powershell script has been delivered successfully">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#ktemp#\autoremoteaccess\Automateremoteaccess.ps1" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <If description="Do nothing if log file already exists">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#ktemp#\autoremoteaccess\autoremoteaccess.log" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Else>
                    <Statement description="If not, create new log file" name="Execute Powershell" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="New-Item &quot;#ktemp#\autoremoteaccess\autoremoteaccess.log&quot; -ItemType file" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Run Powershell script if all verifications are passed" name="Execute Powershell" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="#ktemp#\autoremoteaccess\Automateremoteaccess.ps1 -Url &quot;#Url#&quot; -Username &quot;#Username#&quot; -Password &quot;#Password#&quot; -Log &quot;#ktemp#\autoremoteaccess\autoremoteaccess.log&quot;" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                </Statement>
                <Statement description="Redirect output from script to Procedure log" name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="#global:psresult#" />
                </Statement>
                <If description="if new user has been created, send email to admin">
                  <Condition name="CheckVariable">
                    <Parameter xsi:type="StringParameter" name="VariableName" value="#global:psresult#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="access details" />
                  </Condition>
                  <Then>
                    <Statement description="Email will be sent to default email address of administrator" name="SendEmail" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="To" value="#adminDefaults.adminEmail#" />
                      <Parameter xsi:type="StringParameter" name="Subject" value="New user with remote access has been created" />
                      <Parameter xsi:type="MultiLineStringParameter" name="Body" value="#global:psresult#" />
                    </Statement>
                  </Then>
                </If>
              </Then>
              <Else>
                <Statement description="Handle error and display a message" name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="Execution failed. Script was not found in destination folder #ktemp#\" />
                </Statement>
              </Else>
            </If>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Only Windows operating systems are supported." />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
  </Folder>
</ScriptExport>