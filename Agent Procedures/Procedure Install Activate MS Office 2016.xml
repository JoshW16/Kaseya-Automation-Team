<?xml version="1.0" encoding="utf-8"?>
<ScriptExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Procedure name="Install Activate MS Office 2016" treePres="3" id="445648569" folderId="691945742625717" treeFullPath="myProcedures - kadmin">
    <Body description="The procedure calls Powershell script that creates file Configuration.xml. The file is used for unattended install MS Office 2016.&#xA;&#xA;Author: Proserv Team - VS">
      <Statement description="The procedure calls Powershell script that creates file Configuration.xml. The file is used for unattended install MS Office 2016.&#xD;&#xA;Version: 0.1&#xD;&#xA;Author:  Proserv Team - VS&#xD;&#xA;Set File share path or a local path for software distribution.  \\Server\ShareName" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="\\W2012R2-T1\Software\" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="shared_folder" />
      </Statement>
      <Statement description="Set MS Office 2016 edition" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="ProPlusRetail" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="office_edition" />
      </Statement>
      <Statement description="Set the activation key. KMS or MAK" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="Please provide KMS or MAK activation key &quot;#####-#####-#####-#####-#####&quot;" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="activation_key" />
      </Statement>
      <Statement description="Local working folder" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="path" />
      </Statement>
      <Statement description="Config file name" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="#path#\Config.xml" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="config_file" />
      </Statement>
      <Statement description="Set script name" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="Install-ActivateOffice.ps1" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="ps_script" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="#path#\#ps_script#" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="ps_script_path_name" />
      </Statement>
      <Statement description="Download the script" name="GetURL" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="URL" value="https://raw.githubusercontent.com/Kaseya-Automation-Team/Kaseya-Automation-Team/main/Scripts/Powershell/#ps_script#" />
        <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#ps_script_path_name#" />
        <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
      </Statement>
      <Statement name="WriteFile" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Path" value="#path#\setup.exe" />
        <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\Office2016\setup.exe" />
        <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
      </Statement>
      <If description="">
        <Condition name="TestFile">
          <Parameter xsi:type="StringParameter" name="Path" value="#path#\setup.exe" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
          <Parameter xsi:type="StringParameter" name="Value" value="" />
        </Condition>
        <Then>
          <If description="">
            <Condition name="Windows 32 or 64 Bit Check">
              <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
            </Condition>
            <Then>
              <Statement description="Office version. 32 bit/64 bit" name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="32" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="bit_version" />
              </Statement>
              <Statement name="ExecuteShellCommand" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command #ps_script_path_name#  -DownloadTo #shared_folder# -BitVersion '32' -OfficeEdition #office_edition# -ActivationKey #activation_key#" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
            </Then>
          </If>
          <If description="">
            <Condition name="Windows 32 or 64 Bit Check">
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            </Condition>
            <Then>
              <Statement name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="Choose 32/64 bit version. Valid values are  32 and 64" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="bit_version" />
              </Statement>
              <If description="">
                <Condition name="CheckVariable">
                  <Parameter xsi:type="StringParameter" name="VariableName" value="#bit_version#" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                  <Parameter xsi:type="StringParameter" name="Value" value="32" />
                </Condition>
                <Then>
                  <Statement name="ExecuteShellCommand" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command #ps_script_path_name#  -DownloadTo #shared_folder# -BitVersion '32' -OfficeEdition #office_edition# -ActivationKey #activation_key#" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <If description="">
                <Condition name="CheckVariable">
                  <Parameter xsi:type="StringParameter" name="VariableName" value="#bit_version#" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                  <Parameter xsi:type="StringParameter" name="Value" value="64" />
                </Condition>
                <Then>
                  <Statement name="ExecuteShellCommand" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command #ps_script_path_name#  -DownloadTo #shared_folder# -BitVersion '64' -OfficeEdition #office_edition# -ActivationKey #activation_key#" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
            </Then>
          </If>
        </Then>
      </If>
      <Statement description="Install" name="PauseScript" continueOnFail="false">
        <Parameter xsi:type="IntegerParameter" name="Seconds" value="2" />
      </Statement>
      <If description="">
        <Condition name="TestFile">
          <Parameter xsi:type="StringParameter" name="Path" value="#config_file#" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
          <Parameter xsi:type="StringParameter" name="Value" value="" />
        </Condition>
        <Then>
          <Statement name="ExecuteShellCommand" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Command" value="#path#\install.cmd" />
            <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
            <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
          </Statement>
        </Then>
        <Else>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="#path#\setup.exe not found!" />
          </Statement>
        </Else>
      </If>
    </Body>
  </Procedure>
</ScriptExport>