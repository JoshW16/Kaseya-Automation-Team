<?xml version="1.0" encoding="utf-8"?>
<ScriptExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Procedure name="Gather Inactive Computers" treePres="3" id="146861278" folderId="691945742625717" treeFullPath="myProcedures - kadmin">
    <Body description="The procedure calls PowerShell script that gathers computers that are inactive for given amount of days and saves to a CSV-file.&#xA;Inactivity detected by the LastLogonDate AD attribute">
      <Statement description="The procedure calls PowerShell script  that gathers computers that are inactive for given amount of days and saves to a CSV-file.&#xD;&#xA;Version: 0.2&#xD;&#xA;Author: Proserv Team - VS&#xD;&#xA;Specify working folder" name="GetVariable" continueOnFail="false" osType="Windows">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="path" />
      </Statement>
      <Statement description="Set the output CSV-file name" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="inactive_comps.csv" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="output_file" />
      </Statement>
      <Statement description="Set Powershell script name" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="Gather-InactiveComputers.ps1" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="ps_script" />
      </Statement>
      <Statement description="The scripts name &amp; path" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="#path#\#ps_script#" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="ps_script_path_name" />
      </Statement>
      <Statement description="output file on the VSA server" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="..\..\PSQueIn\InactiveComputers-Information\#vAgentConfiguration.agentGuid#.csv" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="vsa_path" />
      </Statement>
      <Statement description="download the script" name="GetURL" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="URL" value="https://raw.githubusercontent.com/Kaseya-Automation-Team/Kaseya-Automation-Team/main/Scripts/Powershell/#ps_script#" />
        <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#ps_script_path_name#" />
        <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
      </Statement>
      <If description="check if script downloaded">
        <Condition name="TestFile">
          <Parameter xsi:type="StringParameter" name="Path" value="#ps_script_path_name#" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
          <Parameter xsi:type="StringParameter" name="Value" value="" />
        </Condition>
        <Then>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="Provide amount of days of inactivity, please" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="days" />
          </Statement>
          <If description="check if number of days is correct">
            <Condition name="CheckVariable">
              <Parameter xsi:type="StringParameter" name="VariableName" value="#days#" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="GreaterThan" />
              <Parameter xsi:type="StringParameter" name="Value" value="0" />
            </Condition>
            <Then>
              <Statement description="Run Powershell script and pass all required arguments to it" name="ExecuteShellCommand" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -NoProfile -executionpolicy Bypass -Command #path#\#ps_script# -AgentName #vAgentConfiguration.agentGuid# -Path #path# -FileName #output_file# -Days #days#" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement description="Pulls the file to the VSA in a unique folder in the UserProfiles directory" name="GetFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#path#\#output_file#" />
                <Parameter xsi:type="StringParameter" name="KServerFileName" value="#vsa_path#" />
                <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteSendAlert" />
              </Statement>
              <Statement description="Cleanup" name="DeleteFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Path" value="#ps_script_path_name#" />
              </Statement>
            </Then>
          </If>
        </Then>
        <Else>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="Script was not downloaded" />
          </Statement>
        </Else>
      </If>
    </Body>
  </Procedure>
</ScriptExport>