<?xml version="1.0" encoding="utf-8"?>
<ScriptExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Folder name="Install &amp; Uninstall Malwarebytes" treePres="3">
    <Procedure name="Install Malwarebytes" treePres="3" id="624588532" folderId="234818212843881">
      <Body description="">
        <Statement description="The procedure detects if Malwarebytes installed on the Windows computer. Downloads &amp; installs it if not already installed. If it is already installed, the procedure reinstalls it" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="WorkingDirectory" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="https://downloads.malwarebytes.com/file/mb-windows" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="DownloadURL" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="#WorkingDirectory#\mbsetup.exe" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="Installer" />
        </Statement>
        <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command  &quot;(Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*' | Where-Object {$_.Publisher -match 'Malwarebytes'} | Measure-Object).Count&quot;" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="#global:cmdresults#" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="DetectFile" />
        </Statement>
        <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command  &quot;try { $Response = Invoke-WebRequest -Uri '#DownloadURL#' -OutFile '#Installer#' -UseBasicParsing -TimeoutSec 600 -PassThru -ErrorAction Stop; $StatusCode = $Response.StatusCode } catch { $StatusCode = $_.Exception.Response.StatusCode.value__ }; Write-Output $StatusCode&quot;" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
        </Statement>
        <If description="">
          <Condition name="CheckVariable">
            <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
            <Parameter xsi:type="StringParameter" name="Value" value="200" />
          </Condition>
          <Then>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#Installer# obtained from #DownloadURL#" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#Installer#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <If description="detect if Malwarebytes already installed">
                  <Condition name="CheckVariable">
                    <Parameter xsi:type="StringParameter" name="VariableName" value="#DetectFile#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="GreaterThan" />
                    <Parameter xsi:type="StringParameter" name="Value" value="0" />
                  </Condition>
                  <Then>
                    <Statement description="Uninstall it" name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="Malwarebytes detected. Uninstalling" />
                    </Statement>
                    <Statement name="ExecuteScript" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="ScriptID" value="1367061386" />
                      <Parameter xsi:type="StringParameter" name="ScriptName" value="Uninstall Malwarebytes" />
                      <Parameter xsi:type="StringParameter" name="TimeDelay" value="" />
                      <Parameter xsi:type="EnumParameter" name="TimeUnit" value="Immediate" />
                    </Statement>
                  </Then>
                </If>
                <Statement description="Install Malwarebytes " name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="Installing Malwarebytes" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="#Installer# /VERYSILENT /NORESTART /suppressmsgboxes" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="Check if (re)installation was successful" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command  &quot;(Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*' | Where-Object {$_.Publisher -match 'Malwarebytes'} | Measure-Object).Count&quot;" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#global:cmdresults#" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="DetectFile" />
                </Statement>
                <If description="">
                  <Condition name="CheckVariable">
                    <Parameter xsi:type="StringParameter" name="VariableName" value="#DetectFile#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="GreaterThan" />
                    <Parameter xsi:type="StringParameter" name="Value" value="0" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="Malwarebytes installed successfully" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="Could not detect Malwarebytes installed" />
                    </Statement>
                  </Else>
                </If>
                <Statement name="DeleteFile" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Path" value="#Installer#" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="Could not find #Installer#" />
                </Statement>
              </Else>
            </If>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Could not download from #DownloadURL#" />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="Uninstall Malwarebytes" treePres="3" id="1367061386" folderId="234818212843881" treeFullPath="myProcedures - kadmin.Install &amp; Uninstall Malwarebytes">
      <Body description="">
        <Statement description="The procedure detects if Malwarebytes installed on the Windows computer and uninstalls it.&#xD;&#xA;https://support.malwarebytes.com/hc/en-us/articles/360038524734-Malwarebytes-Support-Tool-for-business-environments" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="WorkingDirectory" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="https://downloads.malwarebytes.com/file/mbstcmd" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="DownloadURL" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="#WorkingDirectory#\mbstcmd.exe" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="Uninstaller" />
        </Statement>
        <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command  &quot;(Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*' | Where-Object {$_.Publisher -match 'Malwarebytes'} | Measure-Object).Count&quot;" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="#global:cmdresults#" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="DetectFile" />
        </Statement>
        <If description="">
          <Condition name="CheckVariable">
            <Parameter xsi:type="StringParameter" name="VariableName" value="#DetectFile#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="GreaterThan" />
            <Parameter xsi:type="StringParameter" name="Value" value="0" />
          </Condition>
          <Then>
            <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command  &quot;try { $Response = Invoke-WebRequest -Uri '#DownloadURL#' -OutFile '#Uninstaller#' -UseBasicParsing -TimeoutSec 600 -PassThru -ErrorAction Stop; $StatusCode = $Response.StatusCode } catch { $StatusCode = $_.Exception.Response.StatusCode.value__ }; Write-Output $StatusCode&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
            </Statement>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                <Parameter xsi:type="StringParameter" name="Value" value="200" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="#Uninstaller# obtained from #DownloadURL#" />
                </Statement>
                <If description="">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#Uninstaller#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="ExecuteShellCommand" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Command" value="#Uninstaller#  /y /cleanup /noreboot /nopr" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                  </Then>
                </If>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="Could not obtained #Uninstaller# from #DownloadURL#. Response code #global:cmdresults#" />
                </Statement>
              </Else>
            </If>
            <Statement description="Check if uninstallation was successful" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command  &quot;(Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*' | Where-Object {$_.Publisher -match 'Malwarebytes'} | Measure-Object).Count&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#global:cmdresults#" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="DetectFile" />
            </Statement>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#DetectFile#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="GreaterThan" />
                <Parameter xsi:type="StringParameter" name="Value" value="0" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="Malwarebytes uninstallation was not successful" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="Malwarebytes was removed" />
                </Statement>
              </Else>
            </If>
            <Statement description="Cleanup" name="DeleteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#Uninstaller#" />
            </Statement>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Malwarebytes not found" />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
  </Folder>
</ScriptExport>