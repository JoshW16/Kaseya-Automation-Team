<?xml version="1.0" encoding="utf-8"?>
<ScExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Folder name="Install &amp; Uninstall Verizon One Talk" treePres="3">
    <Procedure name="Install Verizon One Talk" treePres="3" id="1817337870" folderId="927225056908663" treeFullPath="myProcedures - kadmin.Install &amp; Uninstall Verizon One Talk">
      <Body description="The procedure calls downloads and installs for all users on the computer the Verizon One Talk">
        <Statement description="The procedure calls downloads and installs for all users on the computer the Verizon One Talk&#xD;&#xA;Version: 0.1&#xD;&#xA;Author:  Proserv Team - VS&#xD;&#xA;Set path  for software distribution.&#xD;&#xA;detect if Verizon One Talk is already installed" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="wmic product where name=&quot;One Talk&quot;" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="False" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
        </Statement>
        <If description="">
          <Condition name="CheckVariable">
            <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
            <Parameter xsi:type="StringParameter" name="Value" value="No Instance" />
          </Condition>
          <Then>
            <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command &quot;$WebResponse = try { Set-Variable ProgressPreference SilentlyContinue; Invoke-WebRequest -Uri 'https://v4b.verizonwireless.com/volte/windows_download.html' -UseBasicParsing -ErrorAction Stop } catch { $null }; $DownloadUri = $WebResponse.Links | Select-Object -ExpandProperty href -Unique; if ( [string]::IsNullOrEmpty($DownloadUri)) { $DownloadUri = 'Failed' }; $DownloadUri | Write-Output&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
            </Statement>
            <Statement name="GetURL" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="URL" value="#global:cmdresults#" />
              <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempSecureDir#/OneTalkSetup.msi" />
              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#/OneTalkSetup.msi" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="cd &quot;#vAgentConfiguration.agentTempSecureDir#&quot; &amp;&amp; msiexec /i OneTalkSetup.msi ALLUSERS=1 /qn" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="Detect the software after installation" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="wmic product where name=&quot;One Talk&quot;" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="False" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
                </Statement>
                <If description="">
                  <Condition name="CheckVariable">
                    <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                    <Parameter xsi:type="StringParameter" name="Value" value="No Instance" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="Verizon One Talk installed successfully" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="Could not detect Verizon One Talk after installation" />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Cleanup" name="DeleteFile" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#/OneTalkSetup.msi" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="ERROR: The MSI file was not downloaded" />
                </Statement>
              </Else>
            </If>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Verizon One Talk is already installed" />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="Uninstall Verizon One Talk" treePres="3" id="1735372240" folderId="927225056908663" treeFullPath="myProcedures - kadmin.Install &amp; Uninstall Verizon One Talk">
      <Body description="The procedure uninstalls Verizon One Talk">
        <Statement description="The procedure uninstalls Verizon One Talk&#xD;&#xA;Version: 0.1&#xD;&#xA;Author: Proserv Team - VS&#xD;&#xA;detect if Verizon One Talk is already installed" name="ExecuteShellCommand" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Command" value="wmic product where name=&quot;One Talk&quot; call uninstall" />
          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
          <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
        </Statement>
      </Body>
    </Procedure>
  </Folder>
</ScExport>