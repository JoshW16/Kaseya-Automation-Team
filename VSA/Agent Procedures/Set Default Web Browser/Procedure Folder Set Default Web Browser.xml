<?xml version="1.0" encoding="utf-8"?>
<ScriptExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Folder name="Set Default Web Browser" treePres="3">
    <Procedure name="Remove StartUp shortcut for Set Default Web Browser" treePres="3" id="1809373259" folderId="899472201661892">
      <Body description="This procedure removes StartUp shortcut for Set Default Web Browser">
        <If description="This procedure removes StartUp shortcut for Set Default Web Browser&#xD;&#xA;Version 0.1">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="%PROGRAMDATA%\Microsoft\Windows\Start Menu\Programs\Startup\SetDefaultBrowser.lnk" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="DeleteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="%PROGRAMDATA%\Microsoft\Windows\Start Menu\Programs\Startup\SetDefaultBrowser.lnk" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="StartUp shortcut for Set Default Web Browser was deleted" />
            </Statement>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value=" StartUp shortcut for Set Default Web Browser not found" />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="Set Default Web Browser - Google Chrome" treePres="3" id="898190953" folderId="899472201661892">
      <Body description="The procedure sets Default Web Browser for all users">
        <Statement description="The procedure sets Default Web Browser for all users&#xD;&#xA;Version: 0.1&#xD;&#xA;Author:  Proserv Team - VS&#xD;&#xA;################################" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="WorkingDirectory" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="Google Chrome" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="TheApp" />
        </Statement>
        <Statement description="Check if the browser is installed" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command  &quot;$Browser = '#TheApp#'; $BrowserIDs = @{ 'Internet Explorer' = 'IE.HTTP'; 'Google Chrome'  = 'ChromeHTML'; 'Microsoft Edge' = 'MSEdgeHTM'; 'Firefox-308046B0AF4A39CB' = 'FirefoxURL-308046B0AF4A39CB' }; $ProgID = $BrowserIDs[$Browser]; if ( ($null -eq $ProgID) -or ($null -eq $(Get-ItemProperty -Path Registry::'HKEY_LOCAL_MACHINE\SOFTWARE\RegisteredApplications' -Name $Browser -ErrorAction SilentlyContinue)) ) {Write-Output 'Not Found' } else { Write-Output $ProgID }&quot;" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="#global:cmdresults#" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="ProgId" />
        </Statement>
        <If description="">
          <Condition name="CheckVariable">
            <Parameter xsi:type="StringParameter" name="VariableName" value="#ProgId#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="NotEquals" />
            <Parameter xsi:type="StringParameter" name="Value" value="Not Found" />
          </Condition>
          <Then>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Set-DefaultWebApp" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptBaseName" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#WorkingDirectory#\#ScriptBaseName#.ps1" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptFullPath" />
            </Statement>
            <Statement name="WriteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\#ScriptBaseName#.ps1" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command &quot;&amp; '#ScriptFullPath#' -ProgId '#ProgId#' -LogIt&quot;" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="## Create startup task" name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -Command &quot;$WScriptShell = New-Object -ComObject WScript.Shell; $Shortcut = $WScriptShell.CreateShortcut(&quot;&quot;&quot;$($env:ProgramData)\Microsoft\Windows\Start Menu\Programs\Startup\SetDefaultBrowser.lnk&quot;&quot;&quot;); $Shortcut.TargetPath = 'Powershell.exe'; $Shortcut.Arguments = '-WindowStyle Hidden -ExecutionPolicy Bypass -Command &amp; #ScriptFullPath# -ProgId #ProgId#'; $Shortcut.Save()&quot;" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="Could not download #ScriptBaseName#.ps1" />
                </Statement>
              </Else>
            </If>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#TheApp# was not detected on the system." />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="Set Default Web Browser - IE" treePres="3" id="325379421" folderId="899472201661892">
      <Body description="The procedure sets Default Web Browser for all users">
        <Statement description="The procedure sets Default Web Browser for all users&#xD;&#xA;Version: 0.1&#xD;&#xA;Author:  Proserv Team - VS&#xD;&#xA;################################" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="WorkingDirectory" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="Internet Explorer" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="TheApp" />
        </Statement>
        <Statement description="Check if the browser is installed" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command  &quot;$Browser = '#TheApp#'; $BrowserIDs = @{ 'Internet Explorer' = 'IE.HTTP'; 'Google Chrome'  = 'ChromeHTML'; 'Microsoft Edge' = 'MSEdgeHTM'; 'Firefox-308046B0AF4A39CB' = 'FirefoxURL-308046B0AF4A39CB' }; $ProgID = $BrowserIDs[$Browser]; if ( ($null -eq $ProgID) -or ($null -eq $(Get-ItemProperty -Path Registry::'HKEY_LOCAL_MACHINE\SOFTWARE\RegisteredApplications' -Name $Browser -ErrorAction SilentlyContinue)) ) {Write-Output 'Not Found' } else { Write-Output $ProgID }&quot;" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="#global:cmdresults#" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="ProgId" />
        </Statement>
        <If description="">
          <Condition name="CheckVariable">
            <Parameter xsi:type="StringParameter" name="VariableName" value="#ProgId#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="NotEquals" />
            <Parameter xsi:type="StringParameter" name="Value" value="Not Found" />
          </Condition>
          <Then>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Set-DefaultWebApp" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptBaseName" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#WorkingDirectory#\#ScriptBaseName#.ps1" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptFullPath" />
            </Statement>
            <Statement name="WriteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\#ScriptBaseName#.ps1" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command &quot;&amp; '#ScriptFullPath#' -ProgId '#ProgId#' -LogIt&quot;" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="## Create startup task" name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -Command &quot;$WScriptShell = New-Object -ComObject WScript.Shell; $Shortcut = $WScriptShell.CreateShortcut(&quot;&quot;&quot;$($env:ProgramData)\Microsoft\Windows\Start Menu\Programs\Startup\SetDefaultBrowser.lnk&quot;&quot;&quot;); $Shortcut.TargetPath = 'Powershell.exe'; $Shortcut.Arguments = '-WindowStyle Hidden -ExecutionPolicy Bypass -Command &amp; #ScriptFullPath# -ProgId #ProgId#'; $Shortcut.Save()&quot;" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="Could not download #ScriptBaseName#.ps1" />
                </Statement>
              </Else>
            </If>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#TheApp# was not detected on the system." />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
  </Folder>
</ScriptExport>