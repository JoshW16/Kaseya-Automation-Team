<?xml version="1.0" encoding="utf-8"?>
<ScExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Folder name="Install &amp; Uninstall MS Office" treePres="3">
    <Procedure name="Install MS Office" treePres="3" id="252750273" folderId="561895437101784" treeFullPath="myProcedures - vlad.Install &amp; Uninstall MS Office">
      <Body description="The procedure performs unattended installation of MS Office on Windows hosts based on the configuration file.&#xA;&#xA;Author: Proserv Team - VS">
        <Statement description="The procedure performs unattended installation of MS Office on Windows hosts based on the configuration file.&#xD;&#xA;Version: 0.1&#xD;&#xA;Author:  Proserv Team - VS&#xD;&#xA;&#xD;&#xA;Set required  free space in Gygabytes" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="8" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="RequiredSpaceGB" />
        </Statement>
        <Statement description="Check if there is enough space on the system drive" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command &quot;if ( #RequiredSpaceGB# -lt (Get-CimInstance -Query &quot;&quot;&quot;SELECT FreeSpace from CIM_LogicalDisk WHERE DeviceID='$env:systemdrive'&quot;&quot;&quot; | Select-Object @{Name='GB'; Expression={[math]::round($_.FreeSpace/1GB, 0)}}).GB ) { 'OK' | Write-Output } else {&quot;&quot;&quot;ERROR: FreeSpace on drive $env:systemdrive is less than #RequiredSpaceGB# Gb&quot;&quot;&quot; | Write-Output }&quot;" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="False" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
        </Statement>
        <If description="">
          <Condition name="CheckVariable">
            <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
            <Parameter xsi:type="StringParameter" name="Value" value="OK" />
          </Condition>
          <Then>
            <Statement description="Set path  for software distribution." name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="C:\TEMP" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="DownloadTo" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Command" value="if not exist &quot;#DownloadTo#&quot; mkdir #DownloadTo#" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Set name for the script and/or log file" name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Get-ODTUrl" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptBaseName" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempSecureDir#\#ScriptBaseName#.ps1" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptFullPath" />
            </Statement>
            <Statement description="Download the script" name="WriteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#/#ScriptBaseName#.ps1" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\MSOffice\#ScriptBaseName#.ps1" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -File #ScriptFullPath#" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
                </Statement>
                <Statement description="Cleanup" name="DeleteFile" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="ERROR: Could not download #ScriptBaseName#.ps1" />
                </Statement>
              </Else>
            </If>
            <If description="Check if ODT URI was obtained successfully">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotEquals" />
                <Parameter xsi:type="StringParameter" name="Value" value="Failed" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="URL" value="#global:cmdresults#" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#DownloadTo#\ODT.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#DownloadTo#\ODT.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement description="extract setup.exe from the ODT archive" name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="#DownloadTo#\ODT.exe /extract:#DownloadTo# /quiet" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <If description="">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#DownloadTo#\setup.exe" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement description="Download the installation configuration file" name="WriteFile" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Path" value="#DownloadTo#\Configuration.xml" />
                      <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\MSOffice\Configuration.xml" />
                      <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
                    </Statement>
                    <If description="">
                      <Condition name="TestFile">
                        <Parameter xsi:type="StringParameter" name="Path" value="#DownloadTo#\Configuration.xml" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                        <Parameter xsi:type="StringParameter" name="Value" value="" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false">
                          <Parameter xsi:type="StringParameter" name="Comment" value="MS Office download started. It may take a long time, please be patient" />
                        </Statement>
                        <Statement description="Download setup files" name="ExecuteShellCommand" continueOnFail="false">
                          <Parameter xsi:type="StringParameter" name="Command" value="cd &quot;#DownloadTo#&quot; &amp;&amp; setup.exe /download Configuration.xml" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                        </Statement>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false">
                          <Parameter xsi:type="StringParameter" name="Comment" value="MS Office installation started. The installation log files are saved in the %TEMP% folder of the system." />
                        </Statement>
                        <Statement description="Install MS Office" name="ExecuteShellCommand" continueOnFail="false">
                          <Parameter xsi:type="StringParameter" name="Command" value="cd &quot;#DownloadTo#&quot; &amp;&amp; setup.exe /configure Configuration.xml" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                        </Statement>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false">
                          <Parameter xsi:type="StringParameter" name="Comment" value="INFO: MS Office installation completed. The installation log files are saved in the %TEMP% folder of the system." />
                        </Statement>
                      </Then>
                      <Else>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false">
                          <Parameter xsi:type="StringParameter" name="Comment" value="ERROR: Could not download installation configuration file" />
                        </Statement>
                      </Else>
                    </If>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="ERROR: The file #DownloadTo#\setup.exe was not extracted from ODT.exe" />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Cleanup" name="ExecuteShellCommand" continueOnFail="true">
                  <Parameter xsi:type="StringParameter" name="Command" value="IF EXIST &quot;#DownloadTo#\Office\&quot; RMDIR /S /Q &quot;#DownloadTo#\Office&quot;" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="true">
                  <Parameter xsi:type="StringParameter" name="Command" value="cd &quot;#DownloadTo#&quot; &amp;&amp; del Configuration*.xml /s /f /q" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true">
                  <Parameter xsi:type="StringParameter" name="Path" value="#DownloadTo#\setup.exe" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true">
                  <Parameter xsi:type="StringParameter" name="Path" value="#DownloadTo#\ODT.exe" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="ERROR: Could not download the ODT file" />
                </Statement>
              </Else>
            </If>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="#global:cmdresults#" />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="Uninstall MS Office" treePres="3" id="1779617146" folderId="561895437101784" treeFullPath="myProcedures - vlad.Install &amp; Uninstall MS Office">
      <Body description="The procedure calls script that uninstalls MS Office&#xA;Version 0.1.1&#xA;Author: Proserv Team - VS">
        <Statement description="The procedure calls script that uninstalls MS Office&#xD;&#xA;Author: Proserv Team - VS&#xD;&#xA;Version 0.1" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="OffScrub" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="BaseName" />
        </Statement>
        <Statement name="WriteFile" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#/#BaseName#.zip" />
          <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\MSOffice\#BaseName#.zip" />
          <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
        </Statement>
        <If description="">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#\#BaseName#.zip" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement name="Unzip file" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="#vAgentConfiguration.agentTempSecureDir#\#BaseName#.zip" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempSecureDir#" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="MS Office scrubbing started." />
            </Statement>
            <Statement description="Office 2003" name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="OffScrub03.vbs" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="VbsName" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#\OffScrub03.vbs" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="cscript.exe &quot;#vAgentConfiguration.agentTempSecureDir#\#VbsName#&quot; ALL /SkipSD /NoCancel /Quiet" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="ERROR. Could not find #VbsName# file" />
                </Statement>
              </Else>
            </If>
            <Statement description="Office 2007" name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="OffScrub07.vbs" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="VbsName" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#\OffScrub03.vbs" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="cscript.exe &quot;#vAgentConfiguration.agentTempSecureDir#\#VbsName#&quot; ALL /SkipSD /NoCancel /Quiet" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="ERROR. Could not find #VbsName# file" />
                </Statement>
              </Else>
            </If>
            <Statement description="Office 2010" name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="OffScrub10.vbs" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="VbsName" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#\OffScrub03.vbs" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="cscript.exe &quot;#vAgentConfiguration.agentTempSecureDir#\#VbsName#&quot; ALL /SkipSD /NoCancel /Quiet" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="ERROR. Could not find #VbsName# file" />
                </Statement>
              </Else>
            </If>
            <Statement description="Office 2013 MSI" name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="OffScrub_O15msi.vbs" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="VbsName" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#\OffScrub03.vbs" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="cscript.exe &quot;#vAgentConfiguration.agentTempSecureDir#\#VbsName#&quot; ALL /SkipSD /NoCancel /Quiet" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="ERROR. Could not find #VbsName# file" />
                </Statement>
              </Else>
            </If>
            <Statement description="Office 2016 MSI" name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="OffScrub_O16msi.vbs" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="VbsName" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#\OffScrub03.vbs" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="cscript.exe &quot;#vAgentConfiguration.agentTempSecureDir#\#VbsName#&quot; ALL /SkipSD /NoCancel /Quiet" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="ERROR. Could not find #VbsName# file" />
                </Statement>
              </Else>
            </If>
            <Statement description="Office Click2Run" name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="OffScrubc2r.vbs" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="VbsName" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#\OffScrub03.vbs" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Command" value="cscript.exe &quot;#vAgentConfiguration.agentTempSecureDir#\#VbsName#&quot; ALL /SkipSD /NoCancel /Quiet" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="ERROR. Could not find #VbsName# file" />
                </Statement>
              </Else>
            </If>
            <Statement description="Cleanup" name="ExecuteShellCommand" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Command" value="del &quot;#vAgentConfiguration.agentTempDir#\OffScrub*.*&quot; /s /f /q" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="ERROR. Could not download #BaseName#.zip file" />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
  </Folder>
</ScExport>