<?xml version="1.0" encoding="utf-8"?>
<ScExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Folder name="Install &amp; Uninstall GlobalProtect VPN" treePres="3">
    <Procedure name="Install GlobalProtect" treePres="3" id="309826721" folderId="633245878263025" treeFullPath="myProcedures - vlad.Install &amp; Uninstall GlobalProtect VPN">
      <Body description="">
        <Statement description="The procedure performs unattended install GlobalProtect VPN on Windows hosts.&#xD;&#xA;Version: 0.1&#xD;&#xA;Author:  Proserv Team - VS" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="GlobalProtect" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="SoftwareName" />
        </Statement>
        <If description="">
          <Condition name="Windows 32 or 64 Bit Check">
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
          </Condition>
          <Then>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="GlobalProtect-Windows-64-Bit.msi" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="global:MSIFile" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Windows" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="global:OS" />
            </Statement>
          </Then>
        </If>
        <If description="">
          <Condition name="Windows 32 or 64 Bit Check">
            <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
          </Condition>
          <Then>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="GlobalProtect-Windows-32-Bit.msi" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="global:MSIFile" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Windows" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="global:OS" />
            </Statement>
          </Then>
        </If>
        <If description="">
          <Condition name="CheckVariable">
            <Parameter xsi:type="StringParameter" name="VariableName" value="#global:OS#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
            <Parameter xsi:type="StringParameter" name="Value" value="Windows" />
          </Condition>
          <Then>
            <Statement name="WriteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/#SoftwareName#.msi" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\GlobalProtectVPN\#global:MSIFile#" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\#SoftwareName#.msi" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="Install MSI" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="#vAgentConfiguration.agentTempDir#\#SoftwareName#.msi" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                </Statement>
                <Statement description="Check if installation performed" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="wmic product where &quot;Name = '#SoftwareName#'&quot; get Name | find /v &quot;Name&quot;" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
                </Statement>
                <If description="">
                  <Condition name="CheckVariable">
                    <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="#SoftwareName#" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="INFO: #SoftwareName# installed successfully." />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="ERROR: could not detect #SoftwareName# after installation" />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Cleanup" name="DeleteFile" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\#SoftwareName#.msi" />
                </Statement>
              </Then>
            </If>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Could not download #global:MSIFile# file" />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="Uninstall GlobalProtect" treePres="3" id="307211264" folderId="633245878263025" treeFullPath="myProcedures - vlad.Install &amp; Uninstall GlobalProtect VPN">
      <Body description="">
        <Statement description="The procedure silently uninstalls GlobalProtect VPN.&#xD;&#xA;Version: 0.1&#xD;&#xA;Author: Proserv Team - VS" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="GlobalProtect" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="SoftwareName" />
        </Statement>
        <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Parameter1" value="wmic product where &quot;Name = '#SoftwareName#'&quot; get Name | find /v &quot;Name&quot;" />
          <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
          <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
        </Statement>
        <If description="">
          <Condition name="CheckVariable">
            <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
            <Parameter xsi:type="StringParameter" name="Value" value="#SoftwareName#" />
          </Condition>
          <Then>
            <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="wmic product where &quot;Name = '#SoftwareName#'&quot; call uninstall" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
            </Statement>
            <Statement description="Check if uninstalled" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="wmic product where &quot;Name = '#SoftwareName#'&quot; get Name | find /v &quot;Name&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
            </Statement>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                <Parameter xsi:type="StringParameter" name="Value" value="#SoftwareName#" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="INFO: #SoftwareName# was uninstalled successfully" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="WARNIG: Please uninstall #SoftwareName# manually" />
                </Statement>
              </Else>
            </If>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="INFO: #SoftwareName# is absent. No action needed" />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
  </Folder>
</ScExport>