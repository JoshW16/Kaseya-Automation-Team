<#
    Detects if Malwarebytes installed on the Windows computer. Downloads & installs it if not already installed.
    If Malwarebytes is already installed reinstalls it
#>

#Create VSA X Event Source if it doesn't exist
if ( -not [System.Diagnostics.EventLog]::SourceExists("VSA X")) {
    [System.Diagnostics.EventLog]::CreateEventSource("VSA X", "Application")
}

#region function Get-FileFromURI
function Get-FileFromURI {
    [OutputType([bool])]
    param (
        [parameter(Mandatory = $true)]
        [ValidateNotNullOrEmpty()]
        [string] $DownloadUrl,

        [parameter(Mandatory = $true)]
        [ValidateNotNullOrEmpty()]
        [string] $SaveTo
    )
    [bool] $Result = $false

    $ResponseCode = try {
        $ProgressPreference = 'SilentlyContinue'
        (Invoke-WebRequest -Uri $DownloadUrl -OutFile $SaveTo -UseBasicParsing -TimeoutSec 600 -PassThru -ErrorAction Stop).StatusCode
    } catch {
        $_.Exception.Response.StatusCode.value__
    }

    if (200 -eq $ResponseCode) {
        if (Test-Path -Path $SaveTo ) {
            Unblock-File -Path $SaveTo
            $Result = $true
        } else {
            [System.Diagnostics.EventLog]::WriteEntry("VSA X", "Unable to find downloaded file at <$SaveTo>", "Error", 400)
        }
    } else {
        [System.Diagnostics.EventLog]::WriteEntry("VSA X", "Unable to download from <$DownloadUrl> to <$SaveTo>. Response: [$ResponseCode]", "Error", 400)
    }
    return $Result
}
#endregion function Get-FileFromURI

[string]$InstallerUrl   = "https://downloads.malwarebytes.com/file/mb-windows"
[string]$UninstallerUrl = "https://downloads.malwarebytes.com/file/mbstcmd"
$InstallerPath = "$env:TEMP\mbsetup.exe"

[bool] $IsInstallerObtained = Get-FileFromURI -DownloadUrl $InstallerUrl -SaveTo $InstallerPath

if ( $IsInstallerObtained  ) {
    [bool]$IsInstallAllowed = $true
    #check if Malwarebytes already installed
    [int] $DetectApp = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*' | Where-Object {$_.Publisher -match 'Malwarebytes'} | Measure-Object).Count
    if (0 -lt $DetectApp) {
        #Download & execute uninstaller
        $UninstallerPath = "$env:TEMP\mbsetupr.exe"
        [bool] $IsUninstallerObtained = Get-FileFromURI -DownloadUrl $UninstallerUrl -SaveTo $UninstallerPath
        if ( $IsUninstallerObtained ) {
            #Uninstall
            Start-Process -FilePath $UninstallerPath -ArgumentList '/y /cleanup /noreboot /nopr' -Wait
        } else {
            $IsInstallAllowed = $false
            [System.Diagnostics.EventLog]::WriteEntry("VSA X", "Unable to uninstall Malwarebytes", "Error", 400)
        }
    }
    if ($IsInstallAllowed) {
        Start-Process -FilePath $InstallerPath -ArgumentList '/VERYSILENT /NORESTART /suppressmsgboxes' -Wait
        #Check if installation was successful
        $DetectApp = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*' | Where-Object {$_.Publisher -match 'Malwarebytes'} | Measure-Object).Count
        if (0 -lt $DetectApp) {
            [System.Diagnostics.EventLog]::WriteEntry("VSA X", "Malwarebytes successfully installed", "Information", 200)
        } else {
            [System.Diagnostics.EventLog]::WriteEntry("VSA X", "Unable to detect Malwarebytes after installation", "Error", 400)
        }
    }
    #Cleanup
    Get-ChildItem -Path $env:TEMP | Where-Object { $_.Name -like "mbsetup*.exe"} | Remove-Item -Force -Confirm:$false    
}