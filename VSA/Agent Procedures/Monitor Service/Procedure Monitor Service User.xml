<?xml version="1.0" encoding="utf-8"?>
<ScriptExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Procedure name="Monitor Service User" treePres="3" id="499086203" folderId="691945742625717">
    <Body description="The procedure calls powershell script that checks if certain services are running from correct accounts. In case of deficiency an alert is sent.">
      <Statement description="The procedure calls powershell script that checks if certain services are running from correct accounts. In case of deficiency an alert is sent&#xD;&#xA;Version 0.2&#xD;&#xA;Author:  Proserv Team - VS&#xD;&#xA;Set JSON file name that lists filesystem objects with corresponding users/groups &amp; their permissions" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="ServicesUsers.json" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="JSONFile" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="WorkingDirectory" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="Test-Service" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptBaseName" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="#WorkingDirectory#\#ScriptBaseName#.ps1" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptFullPath" />
      </Statement>
      <Statement name="WriteFile" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
        <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\#ScriptBaseName#.ps1" />
        <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
      </Statement>
      <Statement name="WriteFile" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Path" value="#WorkingDirectory#\#JSONFile#" />
        <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\#JSONFile#" />
        <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
      </Statement>
      <If description="">
        <Condition name="TestFile">
          <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
          <Parameter xsi:type="StringParameter" name="Value" value="" />
        </Condition>
        <Then>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#WorkingDirectory#\#JSONFile#" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command #ScriptFullPath# -AgentName '#vAgentConfiguration.agentGuid#' -RefJSON '#WorkingDirectory#\#JSONFile#'" />
                <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
                <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
              </Statement>
              <If description="">
                <Condition name="CheckVariable">
                  <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                  <Parameter xsi:type="StringParameter" name="Value" value="Service" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Comment" value="Detailed information: #global:cmdresults#" />
                  </Statement>
                  <Statement name="GetVariable" continueOnFail="false">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="Service user deficiency detected on machine &lt;&lt;id&gt;&gt;" />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="alertSubject" />
                  </Statement>
                  <Statement name="GetVariable" continueOnFail="false">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="Deficient services detected by &lt;&lt;apn&gt;&gt; on machine &lt;&lt;id&gt;&gt; at &lt;&lt;ata&gt;&gt;. Detailed information: #global:cmdresults#" />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="alertBody" />
                  </Statement>
                  <Statement name="SendAlert" continueOnFail="false" />
                </Then>
              </If>
              <Statement description="Cleanup" name="DeleteFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Path" value="#WorkingDirectory#\#JSONFile#" />
              </Statement>
            </Then>
            <Else>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#JSONFile# was not downloaded" />
              </Statement>
            </Else>
          </If>
        </Then>
        <Else>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="Could not download #ScriptBaseName#.ps1" />
          </Statement>
        </Else>
      </If>
    </Body>
  </Procedure>
</ScriptExport>