<?xml version="1.0" encoding="utf-8"?>
<ScriptExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Folder name="Mapped Drives" treePres="3">
    <Procedure name="Remove Mapped Drive" treePres="3" id="1438886080" folderId="753211639473778" treeFullPath="myProcedures - kadmin.Mapped Drives">
      <Body description="The procedure calls PowerShell script that Removes existing drive mapped to a certain network path&#xA;&#xA;Author: Proserv Team - VS">
        <Statement description="The procedure calls PowerShell script that Removes existing drive mapped to a certain network path&#xD;&#xA;Version: 0.1&#xD;&#xA;Author:  Proserv Team - VS&#xD;&#xA;################################&#xD;&#xA;Set script logging variable variable. 0 - no logging. 1 - log to file" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="1" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="LogIt" />
        </Statement>
        <Statement description="Request mapping info" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="Provide mapped drive letter (H ... Z), please" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="DriveLetter" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="Provide network path for the mapped drive (\\Server\Share), please" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="SharePath" />
        </Statement>
        <Statement description="Local working folder" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="WorkingDirectory" />
        </Statement>
        <Statement description="Set name for the script and/or log file" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="Remove-MappedDrive" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptBaseName" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="#WorkingDirectory#\#ScriptBaseName#.ps1" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptFullPath" />
        </Statement>
        <Statement description="Download the script" name="WriteFile" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
          <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\#ScriptBaseName#.ps1" />
          <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
        </Statement>
        <If description="################################">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement description="Define the script's parameters" name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="&quot;&amp; '#ScriptFullPath#' -UNCPath '#SharePath#' -DriveLetter '#DriveLetter#' -LogIt #LogIt#&quot;" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptCommandParameters" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command #ScriptCommandParameters#" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Could not download #ScriptBaseName#.ps1" />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
    <Procedure name="Set Mapped Drive" treePres="3" id="451962796" folderId="753211639473778" treeFullPath="myProcedures - kadmin.Mapped Drives">
      <Body description="The procedure calls PowerShell script that creates new or updates existing mapped drive&#xA;&#xA;Author: Proserv Team - VS">
        <Statement description="The procedure calls PowerShell script that creates new or updates existing mapped drive&#xD;&#xA;Version: 0.1&#xD;&#xA;Author:  Proserv Team - VS&#xD;&#xA;################################&#xD;&#xA;Set script logging variable variable. 0 - no logging. 1 - log to file" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="1" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="LogIt" />
        </Statement>
        <Statement description="Request mapping info" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="Provide mapped drive letter (H ... Z), please" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="DriveLetter" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="Provide network path for the mapped drive (\\Server\Share), please" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="SharePath" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="Update existing mappings (1- update, 0- leave intact)" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="UpdateMapping" />
        </Statement>
        <Statement description="Local working folder" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="WorkingDirectory" />
        </Statement>
        <Statement description="Set name for the script and/or log file" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="Set-MappedDrive" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptBaseName" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="#WorkingDirectory#\#ScriptBaseName#.ps1" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptFullPath" />
        </Statement>
        <Statement description="Download the script" name="WriteFile" continueOnFail="false">
          <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
          <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\#ScriptBaseName#.ps1" />
          <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
        </Statement>
        <If description="################################">
          <Condition name="TestFile">
            <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
            <Parameter xsi:type="StringParameter" name="Value" value="" />
          </Condition>
          <Then>
            <Statement description="Define the script's parameters" name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="&quot;&amp; '#ScriptFullPath#' -UNCPath '#SharePath#' -DriveLetter '#DriveLetter#' -UpdateMapping #UpdateMapping# -LogIt #LogIt#&quot;" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptCommandParameters" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command #ScriptCommandParameters#" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
          </Then>
          <Else>
            <Statement name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Could not download #ScriptBaseName#.ps1" />
            </Statement>
          </Else>
        </If>
      </Body>
    </Procedure>
  </Folder>
</ScriptExport>