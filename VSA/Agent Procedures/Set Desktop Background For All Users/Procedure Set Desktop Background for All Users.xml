<?xml version="1.0" encoding="utf-8"?>
<ScExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Procedure name="Set Desktop Background for All Users" treePres="3" id="250386258" folderId="639908241545738" treeFullPath="myProcedures - kadmin">
    <Body description="The procedure calls PowerShell script that sets desired desktop background for all users.">
      <Statement description="The procedure calls PowerShell script that sets desired desktop background for all users.&#xD;&#xA;Version: 0.1&#xD;&#xA;Author: Proserv Team - VS&#xD;&#xA;################################&#xD;&#xA;Local working folder" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="WorkingDirectory" />
      </Statement>
      <Statement description="Destination directory for the wallpaper file" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="%SYSTEMROOT%\Web\Wallpaper" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="WallpaperDirectory" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="wallpaper.jpg" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="WallpaperFileName" />
      </Statement>
      <Statement description="Set name for the script and/or log file" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="Set-DesktopBackground" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptBaseName" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="#WorkingDirectory#\#ScriptBaseName#.ps1" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptFullPath" />
      </Statement>
      <Statement description="Download the PS script" name="WriteFile" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#/#ScriptBaseName#.ps1" />
        <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\DesktopBackground\#ScriptBaseName#.ps1" />
        <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
      </Statement>
      <Statement description="Set scheduler delay in seconds" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="10" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="global:DelaySeconds" />
      </Statement>
      <Statement description="Desktop Background settings" name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="0" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="ColorR" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="0" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="ColorG" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="0" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="ColorB" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="0" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="SetWallpaper" />
      </Statement>
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="-NoProfile -ExecutionPolicy Bypass -Command #ScriptFullPath# -R #ColorR# -G #ColorG# -B #ColorB#" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="global:ScriptParameters" />
      </Statement>
      <If description="Check if path for a wallpaper image is provided">
        <Condition name="CheckVariable">
          <Parameter xsi:type="StringParameter" name="VariableName" value="#SetWallpaper#" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="NotEquals" />
          <Parameter xsi:type="StringParameter" name="Value" value="0" />
        </Condition>
        <Then>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#WallpaperDirectory#\#WallpaperFileName#" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="DeleteFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Path" value="#WallpaperDirectory#\#WallpaperFileName#" />
              </Statement>
            </Then>
          </If>
          <Statement name="WriteFile" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Path" value="#WallpaperDirectory#\#WallpaperFileName#" />
            <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\DesktopBackground\#WallpaperFileName#" />
            <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#WallpaperDirectory#\#WallpaperFileName#" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#global:ScriptParameters# -WallpaperPath &quot;&quot;&quot;#WallpaperDirectory#\#WallpaperFileName#&quot;&quot;&quot;" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="global:ScriptParameters" />
              </Statement>
            </Then>
            <Else>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="Could not copy #WallpaperFileName# to #WallpaperFileName#" />
              </Statement>
            </Else>
          </If>
        </Then>
      </If>
      <If description="################################">
        <Condition name="TestFile">
          <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
          <Parameter xsi:type="StringParameter" name="Value" value="" />
        </Condition>
        <Then>
          <Statement description="Define the script's parameters &amp; execute the script" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe #global:ScriptParameters#" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="BlackDesktop" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="TaskName" />
          </Statement>
          <Statement description="## Create startup task" name="ExecuteShellCommand" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Command" value="Powershell.exe -Command &quot;$WScriptShell = New-Object -ComObject WScript.Shell; $Shortcut = $WScriptShell.CreateShortcut(&quot;&quot;&quot;$($env:ProgramData)\Microsoft\Windows\Start Menu\Programs\Startup\#TaskName#.lnk&quot;&quot;&quot;); $Shortcut.TargetPath = 'Powershell.exe'; $Shortcut.Arguments =  '-WindowStyle Hidden -ExecutionPolicy Bypass -File #ScriptFullPath#'; $Shortcut.Save()&quot;" />
            <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
            <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
          </Statement>
          <Statement description="####Create scheduled task for logged in users" name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="Schedule-PSScript" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptBaseName" />
          </Statement>
          <Statement name="GetVariable" continueOnFail="false">
            <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
            <Parameter xsi:type="StringParameter" name="SourceContent" value="#WorkingDirectory#\#ScriptBaseName#.ps1" />
            <Parameter xsi:type="StringParameter" name="VariableName" value="ScriptFullPath" />
          </Statement>
          <Statement name="WriteFile" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#/#ScriptBaseName#.ps1" />
            <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\DesktopBackground\#ScriptBaseName#.ps1" />
            <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command #ScriptFullPath#  -DelaySeconds #global:DelaySeconds# -TaskName #TaskName# -ScheduledTaskAction '#global:ScriptParameters#'" />
                <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
                <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
              </Statement>
              <Statement description="Cleanup" name="DeleteFile" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Path" value="#ScriptFullPath#" />
              </Statement>
            </Then>
            <Else>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="Could not download #ScriptBaseName#.ps1" />
              </Statement>
            </Else>
          </If>
        </Then>
        <Else>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="Could not download #ScriptBaseName#.ps1" />
          </Statement>
        </Else>
      </If>
    </Body>
  </Procedure>
</ScExport>