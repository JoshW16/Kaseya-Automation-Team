<?xml version="1.0" encoding="utf-8"?>
<ScExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Procedure name="Mitigate MS Exchange CVE-2022-41040 Vulnerability" treePres="3" id="1842787597" folderId="292207468157737" treeFullPath="myProcedures - vlad">
    <Body description="">
      <Statement description="The procedure mitigates the CVE-2022-41040 MS Exchange vulnerability according to Microsoft recommendation (https://msrc-blog.microsoft.com/2022/09/29/customer-guidance-for-reported-zero-day-vulnerabilities-in-microsoft-exchange-server/)&#xD;&#xA;Run the procedure on MS Exchange servers&#xD;&#xA;Version: 0.1&#xD;&#xA;Author: Proserv Team - VS&#xD;&#xA;&#xD;&#xA;Check if IIS installed" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Parameter1" value="powershell -ExecutionPolicy Bypass -Command &quot;Get-WindowsFeature -Name 'Web-Server' | Select-Object -ExpandProperty Installed&quot;" />
        <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
        <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
      </Statement>
      <If description="">
        <Condition name="CheckVariable">
          <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
          <Parameter xsi:type="StringParameter" name="Value" value="True" />
        </Condition>
        <Then>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="No IIS installed. Execute the procedure on an Exchange Server" />
          </Statement>
        </Then>
        <Else>
          <Statement description="Check if Exchange Management Shell is installed" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="powershell -ExecutionPolicy Bypass -Command &quot;if ( $null -eq $( try { Add-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn -ErrorAction Stop -PassThru } catch {$null} ) ) {Write-Output 'NoExchange'}&quot;" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
          </Statement>
          <If description="">
            <Condition name="CheckVariable">
              <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
              <Parameter xsi:type="StringParameter" name="Value" value="NoExchange" />
            </Condition>
            <Then>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="No Exchange Management Shell detected. Execute the procedure on an Exchange Server" />
              </Statement>
            </Then>
            <Else>
              <Statement description="Check if IIS URL Rewrite is installed" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Parameter1" value="powershell -ExecutionPolicy Bypass -Command &quot;Get-CimInstance -Query &quot;&quot;&quot;SELECT Name from win32_product WHERE name LIKE 'IIS URL Rewrite%'&quot;&quot;&quot; | Select-Object -ExpandProperty Name&quot;" />
                <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
                <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
              </Statement>
              <If description="">
                <Condition name="CheckVariable">
                  <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                  <Parameter xsi:type="StringParameter" name="Value" value="IIS" />
                </Condition>
                <Then>
                  <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="powershell -ExecutionPolicy Bypass -Command &quot;$Site = 'iis:\sites\Default Web Site'; $F = &quot;&quot;&quot;system.webServer/rewrite/rules/rule[@name='CVE-2022-41040-Block$_']&quot;&quot;&quot;; Clear-WebConfiguration -PSPath $Site -Filter $F; Add-WebConfigurationProperty -PSPath $Site -Filter 'system.webServer/rewrite/rules' -Name '.' -Value @{name='CVE-2022-41040-Block' + $_ ;patternSyntax='Regular Expressions';stopProcessing='False'}; Set-WebConfigurationProperty -PSPath $Site -Filter &quot;&quot;&quot;$F/match&quot;&quot;&quot; -Name 'url' -Value '.*'; Set-WebConfigurationProperty -PSPath $Site -Filter $F -Name 'conditions' -Value (@{'input'=&quot;&quot;&quot;{REQUEST_URI}&quot;&quot;&quot;;pattern='.*autodiscover\.json.*\@.*Powershell.*';ignoreCase='true';negate='false'}); Set-WebConfigurationProperty -PSPath $Site -Filter $F -Name &quot;&quot;&quot;action&quot;&quot;&quot; -Value (@{type='CustomResponse';statusCode=403;statusReason='Forbidden: Access is denied.';statusDescription='You do not have permission to view this directory or page using the credentials that you supplied.'})&quot;" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
                  </Statement>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Comment" value="SUCCESS. IIS URL Rewrite rule added." />
                  </Statement>
                </Then>
                <Else>
                  <Statement description="Install IIS URL Rewrite" name="WriteScriptLogEntry" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Comment" value="IIS URL Rewrite is not installed. Trying to install." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Command" value="powershell -ExecutionPolicy Bypass -Command &quot;$ProgressPreference = 'SilentlyContinue'; Invoke-WebRequest -Uri 'https://download.microsoft.com/download/1/2/8/128E2E22-C1B9-44A4-BE2A-5859ED1D4592/rewrite_amd64_en-US.msi' -OutFile '#vAgentConfiguration.agentTempSecureDir#\urlrewrite.msi' -UseBasicParsing -TimeoutSec 600 -PassThru&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <If description="">
                    <Condition name="TestFile">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#\urlrewrite.msi" />
                      <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                      <Parameter xsi:type="StringParameter" name="Value" value="" />
                    </Condition>
                    <Then>
                      <Statement name="WriteScriptLogEntry" continueOnFail="false">
                        <Parameter xsi:type="StringParameter" name="Comment" value="ERROR. Could not download the IIS URL Rewrite. Try to install it manually" />
                      </Statement>
                    </Then>
                    <Else>
                      <Statement name="ExecuteShellCommand" continueOnFail="false">
                        <Parameter xsi:type="StringParameter" name="Command" value="cd &quot;#vAgentConfiguration.agentTempSecureDir#&quot; &amp;&amp; msiexec /i urlrewrite.msi /qn" />
                        <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                        <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                      </Statement>
                      <Statement description="Check install" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                        <Parameter xsi:type="StringParameter" name="Parameter1" value="powershell -ExecutionPolicy Bypass -Command &quot;Get-CimInstance -Query &quot;&quot;&quot;SELECT Name from win32_product WHERE name LIKE 'IIS URL Rewrite%'&quot;&quot;&quot; | Select-Object -ExpandProperty Name&quot;" />
                        <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
                        <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
                      </Statement>
                      <If description="">
                        <Condition name="CheckVariable">
                          <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
                          <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                          <Parameter xsi:type="StringParameter" name="Value" value="IIS" />
                        </Condition>
                        <Then>
                          <Statement name="ExecuteShellCommand" continueOnFail="false">
                            <Parameter xsi:type="StringParameter" name="Command" value="iisreset /restart" />
                            <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                            <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                          </Statement>
                          <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                            <Parameter xsi:type="StringParameter" name="Parameter1" value="powershell -ExecutionPolicy Bypass -Command &quot;$Site = 'iis:\sites\Default Web Site'; $F = &quot;&quot;&quot;system.webServer/rewrite/rules/rule[@name='CVE-2022-41040-Block$_']&quot;&quot;&quot;; Clear-WebConfiguration -PSPath $Site -Filter $F; Add-WebConfigurationProperty -PSPath $Site -Filter 'system.webServer/rewrite/rules' -Name '.' -Value @{name='CVE-2022-41040-Block' + $_ ;patternSyntax='Regular Expressions';stopProcessing='False'}; Set-WebConfigurationProperty -PSPath $Site -Filter &quot;&quot;&quot;$F/match&quot;&quot;&quot; -Name 'url' -Value '.*'; Set-WebConfigurationProperty -PSPath $Site -Filter $F -Name 'conditions' -Value (@{'input'=&quot;&quot;&quot;{REQUEST_URI}&quot;&quot;&quot;;pattern='.*autodiscover\.json.*\@.*Powershell.*';ignoreCase='true';negate='false'}); Set-WebConfigurationProperty -PSPath $Site -Filter $F -Name &quot;&quot;&quot;action&quot;&quot;&quot; -Value (@{type='CustomResponse';statusCode=403;statusReason='Forbidden: Access is denied.';statusDescription='You do not have permission to view this directory or page using the credentials that you supplied.'})&quot;" />
                            <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
                            <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
                          </Statement>
                          <Statement name="WriteScriptLogEntry" continueOnFail="false">
                            <Parameter xsi:type="StringParameter" name="Comment" value="SUCCESS. IIS URL Rewrite rule added." />
                          </Statement>
                        </Then>
                        <Else>
                          <Statement name="WriteScriptLogEntry" continueOnFail="false">
                            <Parameter xsi:type="StringParameter" name="Comment" value="ERROR. Could not find the IIS URL Rewrite after installation. Try to install it manually" />
                          </Statement>
                        </Else>
                      </If>
                      <Statement description="Cleanup" name="DeleteFile" continueOnFail="false">
                        <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#\urlrewrite.msi" />
                      </Statement>
                    </Else>
                  </If>
                </Else>
              </If>
            </Else>
          </If>
        </Else>
      </If>
    </Body>
  </Procedure>
</ScExport>