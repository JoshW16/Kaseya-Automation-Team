<?xml version="1.0" encoding="utf-8"?>
<ScExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Folder name="NOC" treePres="3">
    <Procedure name="NOC. Gather Agent Statuses" treePres="3" id="386985340" folderId="504320437556281" treeFullPath="myProcedures - kadmin.NOC">
      <Body description="">
        <Statement description="This procedure detects the online/offline status of VSA endpoints and records the information in custom fields. Prior to using the procedure, make sure to create the necessary custom fields.&#xD;&#xA;Version: 0.1&#xD;&#xA;Author: Proserv Team - VS&#xD;&#xA;Dedicated Endpoint's concatenated representation of the machine id and the group id it is associated with." name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="w10x64-2.root.root" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="DedicatedEndpoint" />
        </Statement>
        <Statement description="VSA credentials" name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="Provide VSA user name" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="VSAUserName" />
        </Statement>
        <Statement name="GetVariable" continueOnFail="false">
          <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
          <Parameter xsi:type="StringParameter" name="SourceContent" value="Provide the VSA user PAT" />
          <Parameter xsi:type="StringParameter" name="VariableName" value="VSAUserPAT" />
        </Statement>
        <If description="">
          <Condition name="CheckVariable">
            <Parameter xsi:type="StringParameter" name="VariableName" value="#vAgentConfiguration.Machine_GroupID#" />
            <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
            <Parameter xsi:type="StringParameter" name="Value" value="#DedicatedEndpoint#" />
          </Condition>
          <Then>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Set-StatusField.ps1" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="TheScript" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempSecureDir#/NOC.csv" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="LogFilePath" />
            </Statement>
            <Statement description="Get Address of the primary VSA server" name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="for /f &quot;tokens=1 delims=:&quot; %i in (&quot;#vAgentConfiguration.primaryKServer#&quot;) do @echo %i" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="False" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
            </Statement>
            <Statement name="WriteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#/#TheScript#" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\NOC\#TheScript#" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#\#TheScript#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetVariable" continueOnFail="false">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="https://#global:cmdresults#" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="VSAServerAddress" />
                </Statement>
                <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="Powershell.exe -NoProfile -ExecutionPolicy Bypass -Command &quot;#vAgentConfiguration.agentTempSecureDir#\#TheScript# -VSAServerAddress '#VSAServerAddress#' -VSAUserName '#VSAUserName#' -VSAUserPAT '#VSAUserPAT#' -DedicatedEndpoint '#DedicatedEndpoint#' -LogFilePath '#LogFilePath#'&quot;" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
                </Statement>
                <Statement description="Cleanup" name="DeleteFile" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempSecureDir#/#TheScript#" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="ERROR. Could not download #TheScript# from the VSA Server" />
                </Statement>
              </Else>
            </If>
          </Then>
        </If>
      </Body>
    </Procedure>
  </Folder>
</ScExport>