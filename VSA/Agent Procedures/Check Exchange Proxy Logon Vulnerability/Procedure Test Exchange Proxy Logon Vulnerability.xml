<?xml version="1.0" encoding="utf-8"?>
<ScriptExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Procedure name="Test Exchange Proxy Logon Vulnerability" treePres="3" id="1366440419" folderId="465948406265093" treeFullPath="myProcedures - gonzalo.carrillo@vncsolutions.com">
    <Body description="">
      <Statement name="GetVariable" continueOnFail="false">
        <Parameter xsi:type="EnumParameter" name="VariableType" value="AgentTempSystemDirectory" />
        <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
        <Parameter xsi:type="StringParameter" name="VariableName" value="workDir" />
      </Statement>
      <Statement name="WriteFile" continueOnFail="false">
        <Parameter xsi:type="StringParameter" name="Path" value="#workDir#\Test-ProxyLogon.ps1" />
        <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\Test-ProxyLogon.ps1" />
        <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
      </Statement>
      <If description="">
        <Condition name="TestFile">
          <Parameter xsi:type="StringParameter" name="Path" value="#workDir#\Test-ProxyLogon.ps1" />
          <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
          <Parameter xsi:type="StringParameter" name="Value" value="" />
        </Condition>
        <Then>
          <Statement name="ExecuteShellCommand" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Command" value="powershell -ExecutionPolicy Bypass -File &quot;#workDir#\Test-ProxyLogon.ps1&quot; -OutPath #workDir#\ProxyLogon-Exploit-logs -WorkDir #workDir#" />
            <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
            <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
          </Statement>
          <Statement name="Zip Directory" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Parameter1" value="#workDir#\ProxyLogon-Exploit-logs" />
            <Parameter xsi:type="StringParameter" name="Parameter2" value="#workDir#\ProxyLogon-Exploit-logs.zip" />
            <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
          </Statement>
          <Statement name="PauseScript" continueOnFail="false">
            <Parameter xsi:type="IntegerParameter" name="Seconds" value="5" />
          </Statement>
          <Statement name="GetFile" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#workDir#\ProxyLogon-Exploit-logs.zip" />
            <Parameter xsi:type="StringParameter" name="KServerFileName" value="ProxyLogon-Exploit-logs.zip" />
            <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteSendAlert" />
          </Statement>
          <If description="">
            <Condition name="TestFile">
              <Parameter xsi:type="StringParameter" name="Path" value="#workDir#\result.txt" />
              <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              <Parameter xsi:type="StringParameter" name="Value" value="" />
            </Condition>
            <Then>
              <Statement name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#workDir#\result.txt" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="results" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="#results#" />
              </Statement>
              <If description="">
                <Condition name="CheckVariable">
                  <Parameter xsi:type="StringParameter" name="VariableName" value="#results#" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                  <Parameter xsi:type="StringParameter" name="Value" value="Suspicious activity found" />
                </Condition>
                <Then>
                  <Statement name="GetVariable" continueOnFail="false">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="#results# on &lt;&lt;id&gt;&gt;" />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="alertSubject" />
                  </Statement>
                  <Statement name="GetVariable" continueOnFail="false">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="#results# on &lt;&lt;id&gt;&gt;. Please review the attached zip file in the GetFile page to review details. " />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="alertBody" />
                  </Statement>
                  <Statement name="SendAlert" continueOnFail="false" />
                </Then>
              </If>
            </Then>
          </If>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="Exchange is not installed on the server." />
          </Statement>
        </Then>
        <Else>
          <Statement name="WriteScriptLogEntry" continueOnFail="false">
            <Parameter xsi:type="StringParameter" name="Comment" value="Power Shell failed to download. Please investigate locally." />
          </Statement>
        </Else>
      </If>
    </Body>
  </Procedure>
</ScriptExport>